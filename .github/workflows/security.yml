name: Security Scan

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      solution_file_path:
        required: true
        type: string

jobs:
  trivy:
    name: Trivy Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Trivy DB sha
        id: trivy-db 
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          endpoint='/orgs/aquasecurity/packages/container/trivy-db/versions'
          headers='Accept: application/vnd.github+json'
          jqFilter='.[] | select(.metadata.container.tags[] | contains("latest")) | .name | sub("sha256:";"")'
          sha=$(gh api -H "${headers}" "${endpoint}" | jq --raw-output "${jqFilter}")
          echo "Trivy DB sha256:${sha}"
          echo "sha=${sha}" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: .trivy
          key: trivy-db-${{ steps.trivy-db.outputs.sha }}

      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{ inputs.image_name }} .
      
      - name: Trivy Scanner | Dockerfile
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ inputs.image_name }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          scanners: vuln
          cache-dir: .trivy

      - name: Grant Trivy Permissions
        run: sudo chown -R $(stat . -c %u:%g) .trivy

  snyk:
    name: Snyk Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            8.0.x
      
      - name: Dotnet Restore
        run: dotnet restore

      - name: Snyk Test
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --file=${{ inputs.solution_file_path }} --severity-threshold=low

      - name: Snyk Monitor
        uses: snyk/actions/dotnet@master
        continue-on-error: true 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --file=${{ inputs.solution_file_path }}